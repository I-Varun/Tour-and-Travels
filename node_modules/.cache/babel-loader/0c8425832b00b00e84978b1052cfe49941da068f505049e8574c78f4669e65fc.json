{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VARUN SINGH\\\\Documents\\\\DEV projects\\\\Tour-and-Travels\\\\src\\\\Components\\\\Booking\\\\PaymentOptions.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button, VStack, useMediaQuery } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentOptions = () => {\n  _s();\n  const [isSmallScreen] = useMediaQuery('(max-width: 400px)');\n  const handlePayment = method => {\n    // Handle payment based on the selected method\n    // You can implement the payment processing logic here\n    console.log(`Payment via ${method}`);\n  };\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: \"4px\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      bg: \"black\",\n      color: \"white\",\n      _hover: {\n        boxShadow: 'none',\n        transition: 'none'\n      },\n      onClick: () => handlePayment('debit card'),\n      fontSize: isSmallScreen ? '15px' : '18px',\n      width: isSmallScreen ? '85%' : '70%',\n      children: \"Pay with Debit Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      bg: \"black\",\n      color: \"white\",\n      _hover: {\n        boxShadow: 'none',\n        transition: 'none'\n      },\n      onClick: () => handlePayment('credit card'),\n      fontSize: isSmallScreen ? '15px' : '18px',\n      width: isSmallScreen ? '85%' : '70%',\n      children: \"Pay with Credit Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      bg: \"black\",\n      color: \"white\",\n      _hover: {\n        boxShadow: 'none',\n        transition: 'none'\n      },\n      onClick: () => handlePayment('UPI'),\n      fontSize: isSmallScreen ? '15px' : '18px',\n      width: isSmallScreen ? '85%' : '70%',\n      children: \"Pay with UPI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentOptions, \"sSYv2CoCHQRRB+zTyrSw+TawP3Y=\", false, function () {\n  return [useMediaQuery];\n});\n_c = PaymentOptions;\nexport default PaymentOptions;\nvar _c;\n$RefreshReg$(_c, \"PaymentOptions\");","map":{"version":3,"names":["React","Button","VStack","useMediaQuery","jsxDEV","_jsxDEV","PaymentOptions","_s","isSmallScreen","handlePayment","method","console","log","spacing","children","bg","color","_hover","boxShadow","transition","onClick","fontSize","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/VARUN SINGH/Documents/DEV projects/Tour-and-Travels/src/Components/Booking/PaymentOptions.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Button, VStack, useMediaQuery } from '@chakra-ui/react';\r\n\r\nconst PaymentOptions = () => {\r\n  const [isSmallScreen] = useMediaQuery('(max-width: 400px)');\r\n\r\n  const handlePayment = (method) => {\r\n    // Handle payment based on the selected method\r\n    // You can implement the payment processing logic here\r\n    console.log(`Payment via ${method}`);\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"4px\">\r\n      <Button\r\n        bg=\"black\"\r\n        color=\"white\"\r\n        _hover={{\r\n          boxShadow: 'none',\r\n          transition: 'none',\r\n        }}\r\n        onClick={() => handlePayment('debit card')}\r\n        fontSize={isSmallScreen ? '15px' : '18px'}\r\n        width={isSmallScreen ? '85%' : '70%'}\r\n      >\r\n        Pay with Debit Card\r\n      </Button>\r\n      <Button\r\n        bg=\"black\"\r\n        color=\"white\"\r\n        _hover={{\r\n          boxShadow: 'none',\r\n          transition: 'none',\r\n        }}\r\n        onClick={() => handlePayment('credit card')}\r\n        fontSize={isSmallScreen ? '15px' : '18px'}\r\n        width={isSmallScreen ? '85%' : '70%'}\r\n      >\r\n        Pay with Credit Card\r\n      </Button>\r\n      <Button\r\n        bg=\"black\"\r\n        color=\"white\"\r\n        _hover={{\r\n          boxShadow: 'none',\r\n          transition: 'none',\r\n        }}\r\n        onClick={() => handlePayment('UPI')}\r\n        fontSize={isSmallScreen ? '15px' : '18px'}\r\n        width={isSmallScreen ? '85%' : '70%'}\r\n      >\r\n        Pay with UPI\r\n      </Button>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default PaymentOptions;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,MAAM,EAAEC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,aAAa,CAAC,GAAGL,aAAa,CAAC,oBAAoB,CAAC;EAE3D,MAAMM,aAAa,GAAIC,MAAM,IAAK;IAChC;IACA;IACAC,OAAO,CAACC,GAAG,CAAE,eAAcF,MAAO,EAAC,CAAC;EACtC,CAAC;EAED,oBACEL,OAAA,CAACH,MAAM;IAACW,OAAO,EAAC,KAAK;IAAAC,QAAA,gBACnBT,OAAA,CAACJ,MAAM;MACLc,EAAE,EAAC,OAAO;MACVC,KAAK,EAAC,OAAO;MACbC,MAAM,EAAE;QACNC,SAAS,EAAE,MAAM;QACjBC,UAAU,EAAE;MACd,CAAE;MACFC,OAAO,EAAEA,CAAA,KAAMX,aAAa,CAAC,YAAY,CAAE;MAC3CY,QAAQ,EAAEb,aAAa,GAAG,MAAM,GAAG,MAAO;MAC1Cc,KAAK,EAAEd,aAAa,GAAG,KAAK,GAAG,KAAM;MAAAM,QAAA,EACtC;IAED;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTrB,OAAA,CAACJ,MAAM;MACLc,EAAE,EAAC,OAAO;MACVC,KAAK,EAAC,OAAO;MACbC,MAAM,EAAE;QACNC,SAAS,EAAE,MAAM;QACjBC,UAAU,EAAE;MACd,CAAE;MACFC,OAAO,EAAEA,CAAA,KAAMX,aAAa,CAAC,aAAa,CAAE;MAC5CY,QAAQ,EAAEb,aAAa,GAAG,MAAM,GAAG,MAAO;MAC1Cc,KAAK,EAAEd,aAAa,GAAG,KAAK,GAAG,KAAM;MAAAM,QAAA,EACtC;IAED;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTrB,OAAA,CAACJ,MAAM;MACLc,EAAE,EAAC,OAAO;MACVC,KAAK,EAAC,OAAO;MACbC,MAAM,EAAE;QACNC,SAAS,EAAE,MAAM;QACjBC,UAAU,EAAE;MACd,CAAE;MACFC,OAAO,EAAEA,CAAA,KAAMX,aAAa,CAAC,KAAK,CAAE;MACpCY,QAAQ,EAAEb,aAAa,GAAG,MAAM,GAAG,MAAO;MAC1Cc,KAAK,EAAEd,aAAa,GAAG,KAAK,GAAG,KAAM;MAAAM,QAAA,EACtC;IAED;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACnB,EAAA,CApDID,cAAc;EAAA,QACMH,aAAa;AAAA;AAAAwB,EAAA,GADjCrB,cAAc;AAsDpB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}