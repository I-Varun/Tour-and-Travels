{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VARUN SINGH\\\\Documents\\\\DEV projects\\\\Tour-and-Travels\\\\src\\\\Components\\\\Payment\\\\DebitCardPayment.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import {\n//   Button,\n//   FormControl,\n//   FormLabel,\n//   Input,\n//   VStack,\n//   useMediaQuery,\n//   AlertDialog,\n//   AlertDialogBody,\n//   AlertDialogFooter,\n//   AlertDialogHeader,\n//   AlertDialogContent,\n//   AlertDialogOverlay,\n// } from '@chakra-ui/react';\n// import { useHistory } from 'react-router-dom';\n\n// const DebitCardPayment = () => {\n//   const [isSmallScreen] = useMediaQuery('(max-width: 400px)');\n//   const history = useHistory();\n\n//   const [debitCardDetails, setDebitCardDetails] = useState({\n//     cardNumber: '',\n//     expiryDate: '',\n//     cvv: '',\n//     firstName: '',\n//     amount: '',\n//   });\n\n//   const [isOpen, setIsOpen] = useState(false);\n//   const onClose = () => setIsOpen(false);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setDebitCardDetails({\n//       ...debitCardDetails,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleProceedToPay = () => {\n//     // Validate debit card details before proceeding to pay\n//     if (\n//       !debitCardDetails.cardNumber ||\n//       !debitCardDetails.expiryDate ||\n//       !debitCardDetails.cvv ||\n//       !debitCardDetails.firstName ||\n//       !debitCardDetails.amount\n//     ) {\n//       alert('Please fill in all the required debit card details.');\n//       return;\n//     }\n\n//     // Handle payment processing logic here\n//     console.log('Proceeding to pay via Debit Card with details:', debitCardDetails);\n\n//     // For demonstration purposes, show a success notification\n//     setIsOpen(true);\n//   };\n\n//   return (\n//     <VStack spacing=\"4px\">\n//       <FormControl id=\"cardNumber\" isRequired mb=\"3\">\n//         <FormLabel>Card Number</FormLabel>\n//         <Input\n//           placeholder=\"Enter Card Number\"\n//           name=\"cardNumber\"\n//           value={debitCardDetails.cardNumber}\n//           onChange={handleInputChange}\n//         />\n//       </FormControl>\n\n//       <FormControl id=\"expiryDate\" isRequired mb=\"3\">\n//         <FormLabel>Expiry Date (MM/YYYY)</FormLabel>\n//         <Input\n//           placeholder=\"Enter Expiry Date\"\n//           name=\"expiryDate\"\n//           value={debitCardDetails.expiryDate}\n//           onChange={handleInputChange}\n//         />\n//       </FormControl>\n\n//       <FormControl id=\"cvv\" isRequired mb=\"3\">\n//         <FormLabel>CVV</FormLabel>\n//         <Input\n//           placeholder=\"Enter CVV\"\n//           name=\"cvv\"\n//           value={debitCardDetails.cvv}\n//           onChange={handleInputChange}\n//         />\n//       </FormControl>\n\n//       <FormControl id=\"firstName\" isRequired mb=\"3\">\n//         <FormLabel>First Name</FormLabel>\n//         <Input\n//           placeholder=\"Enter First Name\"\n//           name=\"firstName\"\n//           value={debitCardDetails.firstName}\n//           onChange={handleInputChange}\n//         />\n//       </FormControl>\n\n//       <FormControl id=\"amount\" isRequired mb=\"3\">\n//         <FormLabel>Enter Amount</FormLabel>\n//         <Input\n//           placeholder=\"Enter Amount\"\n//           type=\"number\"\n//           name=\"amount\"\n//           value={debitCardDetails.amount}\n//           onChange={handleInputChange}\n//         />\n//       </FormControl>\n\n//       <Button\n//         bg=\"black\"\n//         color=\"white\"\n//         _hover={{\n//           boxShadow: 'none',\n//           transition: 'none',\n//         }}\n//         onClick={handleProceedToPay}\n//         fontSize={isSmallScreen ? '15px' : '18px'}\n//         width={isSmallScreen ? '85%' : '70%'}\n//       >\n//         Proceed to Payment\n//       </Button>\n\n//       <AlertDialog\n//         isOpen={isOpen}\n//         leastDestructiveRef={undefined}\n//         onClose={onClose}\n//         isCentered\n//       >\n//         <AlertDialogOverlay>\n//           <AlertDialogContent>\n//             <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n//               Payment Successful\n//             </AlertDialogHeader>\n\n//             <AlertDialogBody>\n//               Thank you for your payment!\n//             </AlertDialogBody>\n\n//             <AlertDialogFooter>\n//               <Button colorScheme=\"green\" onClick={onClose} ml={3}>\n//                 Close\n//               </Button>\n//             </AlertDialogFooter>\n//           </AlertDialogContent>\n//         </AlertDialogOverlay>\n//       </AlertDialog>\n//     </VStack>\n//   );\n// };\n\n// export default DebitCardPayment;\n\nimport React, { useState } from 'react';\nimport { Button, FormControl, FormLabel, Input, VStack, useMediaQuery, AlertDialog, AlertDialogBody, AlertDialogFooter, AlertDialogHeader, AlertDialogContent, AlertDialogOverlay } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DebitCardPayment = () => {\n  _s();\n  const [isSmallScreen] = useMediaQuery('(max-width: 400px)');\n  const history = useHistory();\n  const [debitCardDetails, setDebitCardDetails] = useState({\n    cardNumber: '',\n    expiryDate: '',\n    cvv: '',\n    firstName: '',\n    amount: ''\n  });\n  const [isOpen, setIsOpen] = useState(false);\n  const [error, setError] = useState('');\n  const onClose = () => {\n    setIsOpen(false);\n    setError('');\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setDebitCardDetails({\n      ...debitCardDetails,\n      [name]: value\n    });\n  };\n  const handleProceedToPay = () => {\n    // Basic validation checks\n    if (!/^\\d{16}$/.test(debitCardDetails.cardNumber) || !/^\\d{3}$/.test(debitCardDetails.cvv) || !/^\\d{2}\\/\\d{4}$/.test(debitCardDetails.expiryDate)) {\n      setError('Please enter the details correctly.');\n      return;\n    }\n\n    // Handle payment processing logic here\n    console.log('Proceeding to pay via Debit Card with details:', debitCardDetails);\n\n    // For demonstration purposes, show a success notification\n    setIsOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: \"4px\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginBottom: '10px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      id: \"cardNumber\",\n      isRequired: true,\n      mb: \"3\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Card Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter Card Number\",\n        name: \"cardNumber\",\n        value: debitCardDetails.cardNumber,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      id: \"expiryDate\",\n      isRequired: true,\n      mb: \"3\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Expiry Date (MM/YYYY)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter Expiry Date\",\n        name: \"expiryDate\",\n        value: debitCardDetails.expiryDate,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      id: \"cvv\",\n      isRequired: true,\n      mb: \"3\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"CVV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter CVV\",\n        name: \"cvv\",\n        value: debitCardDetails.cvv,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      id: \"firstName\",\n      isRequired: true,\n      mb: \"3\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter First Name\",\n        name: \"firstName\",\n        value: debitCardDetails.firstName,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      id: \"amount\",\n      isRequired: true,\n      mb: \"3\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Enter Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter Amount\",\n        type: \"number\",\n        name: \"amount\",\n        value: debitCardDetails.amount,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      bg: \"black\",\n      color: \"white\",\n      _hover: {\n        boxShadow: 'none',\n        transition: 'none'\n      },\n      onClick: handleProceedToPay,\n      fontSize: isSmallScreen ? '15px' : '18px',\n      width: isSmallScreen ? '85%' : '70%',\n      children: \"Proceed to Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertDialog, {\n      isOpen: isOpen,\n      leastDestructiveRef: undefined,\n      onClose: onClose,\n      isCentered: true,\n      children: /*#__PURE__*/_jsxDEV(AlertDialogOverlay, {\n        children: /*#__PURE__*/_jsxDEV(AlertDialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(AlertDialogHeader, {\n            fontSize: \"lg\",\n            fontWeight: \"bold\",\n            children: \"Payment Successful\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AlertDialogBody, {\n            children: \"Thank you for your payment!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AlertDialogFooter, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"green\",\n              onClick: onClose,\n              ml: 3,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n_s(DebitCardPayment, \"MA2zMhvtROgt206zE4WTGEY5alI=\", false, function () {\n  return [useMediaQuery, useHistory];\n});\n_c = DebitCardPayment;\nexport default DebitCardPayment;\nvar _c;\n$RefreshReg$(_c, \"DebitCardPayment\");","map":{"version":3,"names":["React","useState","Button","FormControl","FormLabel","Input","VStack","useMediaQuery","AlertDialog","AlertDialogBody","AlertDialogFooter","AlertDialogHeader","AlertDialogContent","AlertDialogOverlay","useHistory","jsxDEV","_jsxDEV","DebitCardPayment","_s","isSmallScreen","history","debitCardDetails","setDebitCardDetails","cardNumber","expiryDate","cvv","firstName","amount","isOpen","setIsOpen","error","setError","onClose","handleInputChange","e","name","value","target","handleProceedToPay","test","console","log","spacing","children","style","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","id","isRequired","mb","placeholder","onChange","type","bg","_hover","boxShadow","transition","onClick","fontSize","width","leastDestructiveRef","undefined","isCentered","fontWeight","colorScheme","ml","_c","$RefreshReg$"],"sources":["C:/Users/VARUN SINGH/Documents/DEV projects/Tour-and-Travels/src/Components/Payment/DebitCardPayment.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import {\r\n//   Button,\r\n//   FormControl,\r\n//   FormLabel,\r\n//   Input,\r\n//   VStack,\r\n//   useMediaQuery,\r\n//   AlertDialog,\r\n//   AlertDialogBody,\r\n//   AlertDialogFooter,\r\n//   AlertDialogHeader,\r\n//   AlertDialogContent,\r\n//   AlertDialogOverlay,\r\n// } from '@chakra-ui/react';\r\n// import { useHistory } from 'react-router-dom';\r\n\r\n// const DebitCardPayment = () => {\r\n//   const [isSmallScreen] = useMediaQuery('(max-width: 400px)');\r\n//   const history = useHistory();\r\n\r\n//   const [debitCardDetails, setDebitCardDetails] = useState({\r\n//     cardNumber: '',\r\n//     expiryDate: '',\r\n//     cvv: '',\r\n//     firstName: '',\r\n//     amount: '',\r\n//   });\r\n\r\n//   const [isOpen, setIsOpen] = useState(false);\r\n//   const onClose = () => setIsOpen(false);\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setDebitCardDetails({\r\n//       ...debitCardDetails,\r\n//       [name]: value,\r\n//     });\r\n//   };\r\n\r\n//   const handleProceedToPay = () => {\r\n//     // Validate debit card details before proceeding to pay\r\n//     if (\r\n//       !debitCardDetails.cardNumber ||\r\n//       !debitCardDetails.expiryDate ||\r\n//       !debitCardDetails.cvv ||\r\n//       !debitCardDetails.firstName ||\r\n//       !debitCardDetails.amount\r\n//     ) {\r\n//       alert('Please fill in all the required debit card details.');\r\n//       return;\r\n//     }\r\n\r\n//     // Handle payment processing logic here\r\n//     console.log('Proceeding to pay via Debit Card with details:', debitCardDetails);\r\n\r\n//     // For demonstration purposes, show a success notification\r\n//     setIsOpen(true);\r\n//   };\r\n\r\n//   return (\r\n//     <VStack spacing=\"4px\">\r\n//       <FormControl id=\"cardNumber\" isRequired mb=\"3\">\r\n//         <FormLabel>Card Number</FormLabel>\r\n//         <Input\r\n//           placeholder=\"Enter Card Number\"\r\n//           name=\"cardNumber\"\r\n//           value={debitCardDetails.cardNumber}\r\n//           onChange={handleInputChange}\r\n//         />\r\n//       </FormControl>\r\n\r\n//       <FormControl id=\"expiryDate\" isRequired mb=\"3\">\r\n//         <FormLabel>Expiry Date (MM/YYYY)</FormLabel>\r\n//         <Input\r\n//           placeholder=\"Enter Expiry Date\"\r\n//           name=\"expiryDate\"\r\n//           value={debitCardDetails.expiryDate}\r\n//           onChange={handleInputChange}\r\n//         />\r\n//       </FormControl>\r\n\r\n//       <FormControl id=\"cvv\" isRequired mb=\"3\">\r\n//         <FormLabel>CVV</FormLabel>\r\n//         <Input\r\n//           placeholder=\"Enter CVV\"\r\n//           name=\"cvv\"\r\n//           value={debitCardDetails.cvv}\r\n//           onChange={handleInputChange}\r\n//         />\r\n//       </FormControl>\r\n\r\n//       <FormControl id=\"firstName\" isRequired mb=\"3\">\r\n//         <FormLabel>First Name</FormLabel>\r\n//         <Input\r\n//           placeholder=\"Enter First Name\"\r\n//           name=\"firstName\"\r\n//           value={debitCardDetails.firstName}\r\n//           onChange={handleInputChange}\r\n//         />\r\n//       </FormControl>\r\n\r\n//       <FormControl id=\"amount\" isRequired mb=\"3\">\r\n//         <FormLabel>Enter Amount</FormLabel>\r\n//         <Input\r\n//           placeholder=\"Enter Amount\"\r\n//           type=\"number\"\r\n//           name=\"amount\"\r\n//           value={debitCardDetails.amount}\r\n//           onChange={handleInputChange}\r\n//         />\r\n//       </FormControl>\r\n\r\n//       <Button\r\n//         bg=\"black\"\r\n//         color=\"white\"\r\n//         _hover={{\r\n//           boxShadow: 'none',\r\n//           transition: 'none',\r\n//         }}\r\n//         onClick={handleProceedToPay}\r\n//         fontSize={isSmallScreen ? '15px' : '18px'}\r\n//         width={isSmallScreen ? '85%' : '70%'}\r\n//       >\r\n//         Proceed to Payment\r\n//       </Button>\r\n\r\n//       <AlertDialog\r\n//         isOpen={isOpen}\r\n//         leastDestructiveRef={undefined}\r\n//         onClose={onClose}\r\n//         isCentered\r\n//       >\r\n//         <AlertDialogOverlay>\r\n//           <AlertDialogContent>\r\n//             <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n//               Payment Successful\r\n//             </AlertDialogHeader>\r\n\r\n//             <AlertDialogBody>\r\n//               Thank you for your payment!\r\n//             </AlertDialogBody>\r\n\r\n//             <AlertDialogFooter>\r\n//               <Button colorScheme=\"green\" onClick={onClose} ml={3}>\r\n//                 Close\r\n//               </Button>\r\n//             </AlertDialogFooter>\r\n//           </AlertDialogContent>\r\n//         </AlertDialogOverlay>\r\n//       </AlertDialog>\r\n//     </VStack>\r\n//   );\r\n// };\r\n\r\n// export default DebitCardPayment;\r\n\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  VStack,\r\n  useMediaQuery,\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n} from '@chakra-ui/react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst DebitCardPayment = () => {\r\n  const [isSmallScreen] = useMediaQuery('(max-width: 400px)');\r\n  const history = useHistory();\r\n\r\n  const [debitCardDetails, setDebitCardDetails] = useState({\r\n    cardNumber: '',\r\n    expiryDate: '',\r\n    cvv: '',\r\n    firstName: '',\r\n    amount: '',\r\n  });\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const onClose = () => {\r\n    setIsOpen(false);\r\n    setError('');\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setDebitCardDetails({\r\n      ...debitCardDetails,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleProceedToPay = () => {\r\n    // Basic validation checks\r\n    if (\r\n      !/^\\d{16}$/.test(debitCardDetails.cardNumber) ||\r\n      !/^\\d{3}$/.test(debitCardDetails.cvv) ||\r\n      !/^\\d{2}\\/\\d{4}$/.test(debitCardDetails.expiryDate)\r\n    ) {\r\n      setError('Please enter the details correctly.');\r\n      return;\r\n    }\r\n\r\n    // Handle payment processing logic here\r\n    console.log('Proceeding to pay via Debit Card with details:', debitCardDetails);\r\n\r\n    // For demonstration purposes, show a success notification\r\n    setIsOpen(true);\r\n  };\r\n\r\n  return (\r\n    <VStack spacing=\"4px\">\r\n      {error && (\r\n        <div style={{ color: 'red', marginBottom: '10px' }}>{error}</div>\r\n      )}\r\n\r\n      <FormControl id=\"cardNumber\" isRequired mb=\"3\">\r\n        <FormLabel>Card Number</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter Card Number\"\r\n          name=\"cardNumber\"\r\n          value={debitCardDetails.cardNumber}\r\n          onChange={handleInputChange}\r\n        />\r\n      </FormControl>\r\n\r\n      <FormControl id=\"expiryDate\" isRequired mb=\"3\">\r\n        <FormLabel>Expiry Date (MM/YYYY)</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter Expiry Date\"\r\n          name=\"expiryDate\"\r\n          value={debitCardDetails.expiryDate}\r\n          onChange={handleInputChange}\r\n        />\r\n      </FormControl>\r\n\r\n      <FormControl id=\"cvv\" isRequired mb=\"3\">\r\n        <FormLabel>CVV</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter CVV\"\r\n          name=\"cvv\"\r\n          value={debitCardDetails.cvv}\r\n          onChange={handleInputChange}\r\n        />\r\n      </FormControl>\r\n\r\n      <FormControl id=\"firstName\" isRequired mb=\"3\">\r\n        <FormLabel>First Name</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter First Name\"\r\n          name=\"firstName\"\r\n          value={debitCardDetails.firstName}\r\n          onChange={handleInputChange}\r\n        />\r\n      </FormControl>\r\n\r\n      <FormControl id=\"amount\" isRequired mb=\"3\">\r\n        <FormLabel>Enter Amount</FormLabel>\r\n        <Input\r\n          placeholder=\"Enter Amount\"\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          value={debitCardDetails.amount}\r\n          onChange={handleInputChange}\r\n        />\r\n      </FormControl>\r\n\r\n      <Button\r\n        bg=\"black\"\r\n        color=\"white\"\r\n        _hover={{\r\n          boxShadow: 'none',\r\n          transition: 'none',\r\n        }}\r\n        onClick={handleProceedToPay}\r\n        fontSize={isSmallScreen ? '15px' : '18px'}\r\n        width={isSmallScreen ? '85%' : '70%'}\r\n      >\r\n        Proceed to Payment\r\n      </Button>\r\n\r\n      <AlertDialog\r\n        isOpen={isOpen}\r\n        leastDestructiveRef={undefined}\r\n        onClose={onClose}\r\n        isCentered\r\n      >\r\n        <AlertDialogOverlay>\r\n          <AlertDialogContent>\r\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n              Payment Successful\r\n            </AlertDialogHeader>\r\n\r\n            <AlertDialogBody>\r\n              Thank you for your payment!\r\n            </AlertDialogBody>\r\n\r\n            <AlertDialogFooter>\r\n              <Button colorScheme=\"green\" onClick={onClose} ml={3}>\r\n                Close\r\n              </Button>\r\n            </AlertDialogFooter>\r\n          </AlertDialogContent>\r\n        </AlertDialogOverlay>\r\n      </AlertDialog>\r\n    </VStack>\r\n  );\r\n};\r\n\r\nexport default DebitCardPayment;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,MAAM,EACNC,WAAW,EACXC,SAAS,EACTC,KAAK,EACLC,MAAM,EACNC,aAAa,EACbC,WAAW,EACXC,eAAe,EACfC,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAkB,EAClBC,kBAAkB,QACb,kBAAkB;AACzB,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,aAAa,CAAC,GAAGZ,aAAa,CAAC,oBAAoB,CAAC;EAC3D,MAAMa,OAAO,GAAGN,UAAU,CAAC,CAAC;EAE5B,MAAM,CAACO,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrB,QAAQ,CAAC;IACvDsB,UAAU,EAAE,EAAE;IACdC,UAAU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"},"metadata":{},"sourceType":"module","externalDependencies":[]}